#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q         &kp W      &kp E       &kp R      &kp T                                              &kp Y            &kp U  &kp I     &kp O     &kp P
&kp A         &kp S      &kp D       &kp F      &kp G        &mo 2                 &none           &kp H            &kp J  &kp K     &kp L     &lt 2 MINUS
&kp Z         &kp X      &kp C       &kp V      &kp B        &kp LANGUAGE_2        &kp LANGUAGE_1  &kp N            &kp M  &mkp MB1  &mkp MB2  &kp LEFT_SHIFT
&kp LEFT_WIN  &kp COMMA  &kp PERIOD  &lt 6 TAB  &lt 4 SPACE  &lt 3 LANGUAGE_2      &kp ENTER       &lt 3 BACKSPACE                             &lt 5 ESCAPE
            >;
        };

        MOUSE {
            bindings = <
&trans        &trans        &trans     &trans          &trans                      &trans  &trans    &trans    &trans    &trans
&trans        &trans        &trans     &trans          &trans  &trans      &trans  &trans  &mkp MB1  &mkp MB3  &mkp MB2  &trans
&trans        &trans        &trans     &trans          &trans  &trans      &trans  &trans  &trans    &mkp MB1  &mkp MB2  &mkp MB3
&kp LEFT_WIN  &kp LEFT_ALT  &kp RCTRL  &kp LEFT_SHIFT  &trans  &trans      &trans  &mo 3                                 &trans
            >;
        };

        SCROLL {
            bindings = <
&kp ESCAPE  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans      &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&kp F12     &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&kp F12     &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        ARROW {
            bindings = <
&kp GRAVE        &kp LC(LS(TAB))         &kp LG(RIGHT)   &kp NUMBER_9             &kp NUMBER_0                           &trans         &kp HOME        &kp UP_ARROW    &kp END          &kp LG(P)
&kp TAB          &kp LA(LG(LEFT_ARROW))  &kp LG(LEFT)    &kp LG(LA(RIGHT_ARROW))  &kp LEFT_BRACKET   &trans      &trans  &kp PAGE_UP    &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp LG(K)
&kp LCMD         &kp LG(LS(LEFT_ARROW))  &trans          &kp LG(LS(RIGHT_ARROW))  &kp RIGHT_BRACKET  &trans      &trans  &kp PAGE_DOWN  &trans          &mkp MB1        &mkp MB2         &mkp MB3
&kp LC(LA(DEL))  &trans                  &kp LEFT_SHIFT  &trans                   &trans             &trans      &trans  &kp DEL                                                         &trans
            >;
        };

        NUM {
            bindings = <
&kp GRAVE                &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp PLUS                                   &kp BACKSLASH    &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp SEMICOLON
&kp SLASH                &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp ASTERISK  &trans      &kp PRINTSCREEN  &kp EXCLAMATION  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp SQT
&mt LEFT_SHIFT NUMBER_0  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp PERIOD    &trans      &trans           &kp NUMBER_0     &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp EQUAL
&trans                   &trans        &trans        &trans        &trans        &trans      &trans           &kp LEFT_SHIFT                                             &trans
            >;
        };

        FUNCTION {
            bindings = <
&trans  &trans  &trans  &trans  &trans                           &kp F1   &kp F2   &kp F3  &kp F4  &kp F5
&trans  &trans  &trans  &trans  &trans  &sys_reset       &trans  &kp F6   &kp F7   &kp F8  &kp F9  &kp F10
&trans  &trans  &trans  &trans  &trans  &bootloader      &trans  &kp F11  &kp F12  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans           &trans  &trans                            &trans
            >;
        };

        SYMBOL {
            bindings = <
&kp PERCENT      &kp DOLLAR     &kp CARET          &kp KP_EQUAL     &kp SLASH                         &kp PIPE       &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp LESS_THAN     &kp GREATER_THAN
&kp AT_SIGN      &kp HASH       &kp DOUBLE_QUOTES  &kp PLUS         &kp CARET     &trans      &trans  &kp MINUS      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp SEMICOLON     &kp COLON
&mt EQUAL MINUS  &kp TILDE      &kp UNDER          &kp EXCLAMATION  &kp QUESTION  &trans      &trans  &kp BACKSLASH  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp SINGLE_QUOTE  &kp DOUBLE_QUOTES
&trans           &kp LESS_THAN  &kp GREATER_THAN   &trans           &trans        &trans      &trans  &trans                                                                        &trans
            >;
        };
    };
};
