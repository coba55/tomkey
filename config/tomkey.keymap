#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define ZMK_POINTING_DEFAULT_MOVE_VAL 300  // デフォルト: 600
#define U_MOUSE_MOVE_MAX 300  // 新しい最大速度設定（デフォルトは600）

#undef MOVE_UP
#undef MOVE_DOWN
#undef MOVE_LEFT
#undef MOVE_RIGHT

#define MOVE_UP MOVE_VERT(-U_MOUSE_MOVE_MAX)
#define MOVE_DOWN MOVE_VERT(U_MOUSE_MOVE_MAX)
#define MOVE_LEFT MOVE_HOR(-U_MOUSE_MOVE_MAX)
#define MOVE_RIGHT MOVE_HOR(U_MOUSE_MOVE_MAX)

// OS設定を日本語キーボードのまま使用するための変換定義

#define JP_DQUOTE       AT                // "
#define JP_AMPERSAND    CARET             // &
#define JP_QUOTE        AMPERSAND         // '
#define JP_EQUAL        UNDER             // =
#define JP_CARET        EQUAL             // ^
#define JP_YEN          0x89              // ¥
#define JP_PLUS         COLON             // +
#define JP_TILDE        PLUS              // ~
#define JP_PIPE         LS(0x89)          // |
#define JP_AT           LEFT_BRACKET      // @
#define JP_COLON        SINGLE_QUOTE      // :
#define JP_ASTERISK     DOUBLE_QUOTES     // *
#define JP_BACKQUOTE    LEFT_BRACE        // `
#define JP_UNDERSCORE   LS(0x87)          // _
#define JP_LBRACKET     RIGHT_BRACKET     // [
#define JP_RBRACKET     BACKSLASH         // ]
#define JP_LPAREN       ASTERISK          // (
#define JP_RPAREN       LEFT_PARENTHESIS  // )
#define JP_LBRACE       RIGHT_BRACE       // {
#define JP_RBRACE       PIPE              // }
#define JP_KANA         LANGUAGE_1        // かな
#define JP_EISU         LANGUAGE_2        // 英数
#define JP_HANZEN       GRAVE             // 半角/全角

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q         &kp W      &kp E       &kp R      &kp T                                                       &kp Y          &kp U  &kp I     &kp O     &kp P
&kp A         &kp S      &kp D       &kp F      &kp G        &mo 2                    &kp RCTRL             &kp H          &kp J  &kp K     &kp L     &lt 2 MINUS
&kp Z         &kp X      &kp C       &kp V      &kp B        &mt LALT LANGUAGE_2      &mt RCTRL LANGUAGE_1  &kp N          &kp M  &mkp MB1  &mkp MB2  &kp LEFT_SHIFT
&kp LEFT_WIN  &kp COMMA  &kp PERIOD  &lt 6 TAB  &lt 4 SPACE  &lt 3 LANGUAGE_2         &mt RCTRL RETURN      &kp BACKSPACE                             &lt 5 ESCAPE
            >;
        };

        MOUSE {
            bindings = <
&trans  &trans        &trans     &trans          &trans                      &trans  &trans    &trans    &trans    &trans
&trans  &trans        &trans     &trans          &trans  &trans      &trans  &trans  &mkp MB1  &mkp MB3  &mkp MB2  &trans
&trans  &trans        &trans     &trans          &trans  &trans      &trans  &trans  &trans    &mkp MB1  &mkp MB2  &mkp MB3
&trans  &kp LEFT_ALT  &kp RCTRL  &kp LEFT_SHIFT  &trans  &trans      &trans  &mo 3                                 &trans
            >;
        };

        SCROLL {
            bindings = <
&kp ESCAPE  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans      &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&kp F12     &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&kp F12     &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        ARROW {
            bindings = <
&kp GRAVE        &kp LC(LS(TAB))         &kp LG(RIGHT)   &kp NUMBER_9             &kp NUMBER_0                               &trans         &kp HOME        &kp UP_ARROW    &kp END          &kp LG(P)
&kp TAB          &kp LA(LG(LEFT_ARROW))  &kp LG(LEFT)    &kp LG(LA(RIGHT_ARROW))  &kp LEFT_BRACKET   &trans      &trans      &kp PAGE_UP    &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp LG(K)
&kp LCMD         &kp LG(LS(LEFT_ARROW))  &trans          &kp LG(LS(RIGHT_ARROW))  &kp RIGHT_BRACKET  &trans      &kp INSERT  &kp PAGE_DOWN  &trans          &mkp MB1        &mkp MB2         &mkp MB3
&kp LC(LA(DEL))  &trans                  &kp LEFT_SHIFT  &trans                   &trans             &trans      &trans      &kp DEL                                                         &trans
            >;
        };

        NUM {
            bindings = <
&kp GRAVE                &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp PLUS                                   &kp BACKSLASH    &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp SEMICOLON
&kp SLASH                &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp ASTERISK  &trans      &kp PRINTSCREEN  &kp EXCLAMATION  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp SQT
&mt LEFT_SHIFT NUMBER_0  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp PERIOD    &trans      &kp LS(LG(S))    &kp NUMBER_0     &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp EQUAL
&trans                   &trans        &trans        &trans        &trans        &trans      &trans           &kp LEFT_SHIFT                                             &trans
            >;
        };

        FUNCTION {
            bindings = <
&bt BT_CLR     &bt BT_CLR_ALL  &bt BT_NXT     &bt BT_PRV     &none                                   &kp F1   &kp F2   &kp F3  &kp F4  &kp F5
&bt BT_SEL 0   &bt BT_SEL 1    &bt BT_SEL 2   &bt BT_SEL 3   &bt BT_SEL 4   &sys_reset       &trans  &kp F6   &kp F7   &kp F8  &kp F9  &kp F10
&bt BT_DISC 0  &bt BT_DISC 1   &bt BT_DISC 2  &bt BT_DISC 3  &bt BT_DISC 4  &bootloader      &trans  &kp F11  &kp F12  &trans  &trans  &trans
&trans         &trans          &trans         &trans         &trans         &trans           &trans  &trans                            &trans
            >;
        };

        SYMBOL {
            bindings = <
&kp PERCENT  &kp DOLLAR    &kp JP_AMPERSAND   &kp JP_CARET     &kp SLASH                         &kp JP_PIPE  &kp JP_LBRACE    &kp JP_RBRACE    &kp LESS_THAN  &kp GREATER_THAN
&kp JP_AT    &kp HASH      &kp JP_ASTERISK    &kp JP_PLUS      &kp JP_EQUAL  &trans      &trans  &kp MINUS    &kp JP_LPAREN    &kp JP_RPAREN    &kp SEMICOLON  &kp JP_COLON
&kp MINUS    &kp JP_TILDE  &kp JP_UNDERSCORE  &kp EXCLAMATION  &kp QUESTION  &trans      &trans  &kp JP_YEN   &kp JP_LBRACKET  &kp JP_RBRACKET  &kp JP_QUOTE   &kp JP_DQUOTE
&trans       &trans        &trans             &trans           &trans        &trans      &trans  &trans                                                        &trans
            >;
        };
    };
};
